# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'homePageHis.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QTextEdit, QLineEdit, QCompleter
from recommenderEngine import engine
import pandas as pd
from PyQt5.QtCore import Qt


df = pd.read_csv("songs-test.csv", sep=',')


class Ui_homePageHisWindow(object):
    def update_display(self):
        song_title = self.lineEdit_songSearch.text()
        song_title_lower = song_title.lower()

    def searchSongs(self, mainSelectedSong):
        from selectedSongUI import Ui_mainSelectedSong
        song_title = self.lineEdit_songSearch.text()
        song_title_lower = song_title.lower()

        get_username = self.username
        # print('username will be sent dari homePageHisUi: ' + get_username)

        self.mainSelectedSong = QtWidgets.QMainWindow()
        self.message = song_title
        self.username = get_username
        self.ui = Ui_mainSelectedSong(
            self.message, self.username, self.recommender)
        self.homepage.hide()
        self.ui.setupUi(self.mainSelectedSong)

        self.mainSelectedSong.show()

    def __init__(self, message, username, songRating, recommender):
        self.username = username
        self.message = message
        self.songRating = songRating
        # print('ini ngeprint dari homePageHisUI: ' + self.message)
        self.recommender = recommender

        self.song_id = self.recommender.getSongID(self.message)
        self.recommender.updateUserRating(
            self.username, self.song_id, self.songRating)

        self.hasil_rekomendasi = self.recommender.generateRecommendations(
            self.username, 8)

    def setupUi(self, homePageHisWindow):
        homePageHisWindow.setObjectName("homePageHisWindow")
        homePageHisWindow.resize(800, 600)
        self.homepage = homePageHisWindow
        homePageHisWindow.setMinimumSize(QtCore.QSize(800, 600))
        homePageHisWindow.setMaximumSize(QtCore.QSize(800, 600))
        homePageHisWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralwidget = QtWidgets.QWidget(homePageHisWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.username_label = QtWidgets.QLabel(self.centralwidget)
        self.username_label.setGeometry(QtCore.QRect(550, 10, 121, 41))
        self.username_label.setStyleSheet("background-color:#65D36E;\n"
                                          "font: 75 9pt \"MS Shell Dlg 2\";\n"
                                          "border-radius:10px;\n"
                                          "text-align: center;\n"
                                          "color: bkack;\n"
                                          "font-weight:bold;")
        self.username_label.setAlignment(QtCore.Qt.AlignCenter)
        self.username_label.setObjectName("username_label")
        self.logout_btn = QtWidgets.QPushButton(self.centralwidget)
        self.logout_btn.setGeometry(QtCore.QRect(700, 10, 93, 41))
        self.logout_btn.setStyleSheet("border:1px solid white;\n"
                                      "border-radius:10px;\n"
                                      "color:white;")
        self.logout_btn.setObjectName("logout_btn")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 60, 121, 41))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("font: 75 12pt \"MS Shell Dlg 2\";\n"
                                   "color: white;\n"
                                   "font-weight:bold;")
        self.label_2.setObjectName("label_2")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(30, 250, 191, 41))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("\n"
                                   "font: 12pt \"MS Shell Dlg 2\";\n"
                                   "color: white;\n"
                                   "font-weight:bold;")
        self.label_4.setObjectName("label_4")

        self.lineEdit_songSearch = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_songSearch.setGeometry(QtCore.QRect(30, 10, 271, 41))
        self.lineEdit_songSearch.setStyleSheet("border-radius: 15px;\n"
                                               "padding: 5px;")

        self.history_btn1 = QtWidgets.QPushButton(self.centralwidget)
        self.history_btn1.setStyleSheet("background-color:#000000;\n"
                                        "color: white;")
        self.history_btn2 = QtWidgets.QPushButton(self.centralwidget)
        self.history_btn3 = QtWidgets.QPushButton(self.centralwidget)
        self.history_btn4 = QtWidgets.QPushButton(self.centralwidget)
        self.history_btn5 = QtWidgets.QPushButton(self.centralwidget)
        self.star1 = QtWidgets.QPushButton(self.centralwidget)
        self.star2 = QtWidgets.QPushButton(self.centralwidget)
        self.star3 = QtWidgets.QPushButton(self.centralwidget)
        self.star4 = QtWidgets.QPushButton(self.centralwidget)
        self.star5 = QtWidgets.QPushButton(self.centralwidget)
        self.star6 = QtWidgets.QPushButton(self.centralwidget)
        self.star7 = QtWidgets.QPushButton(self.centralwidget)
        self.star8 = QtWidgets.QPushButton(self.centralwidget)
        self.star9 = QtWidgets.QPushButton(self.centralwidget)
        self.star10 = QtWidgets.QPushButton(self.centralwidget)
        self.star11 = QtWidgets.QPushButton(self.centralwidget)
        self.star12 = QtWidgets.QPushButton(self.centralwidget)
        self.star13 = QtWidgets.QPushButton(self.centralwidget)
        self.star14 = QtWidgets.QPushButton(self.centralwidget)
        self.star15 = QtWidgets.QPushButton(self.centralwidget)
        self.star16 = QtWidgets.QPushButton(self.centralwidget)
        self.star17 = QtWidgets.QPushButton(self.centralwidget)
        self.star18 = QtWidgets.QPushButton(self.centralwidget)
        self.star19 = QtWidgets.QPushButton(self.centralwidget)
        self.star20 = QtWidgets.QPushButton(self.centralwidget)

        hisStarsFirst = [self.star1, self.star2,
                         self.star3, self.star4, self.star5]
        hisStarsSecond = [self.star6, self.star7,
                          self.star8, self.star9, self.star10]
        hisStarsThird = [self.star11, self.star12,
                         self.star13, self.star14, self.star15]
        hisStarsFourth = [self.star16, self.star17,
                          self.star18, self.star19, self.star20]
        hisPict = [self.history_btn1, self.history_btn2,
                   self.history_btn3, self.history_btn4]

        self.recommendedSong_1 = QtWidgets.QPushButton(self.centralwidget)
        self.recommendedSong_1.setStyleSheet(
            "background-color:#65D36E;color:black")
        self.recommendedSong_2 = QtWidgets.QPushButton(self.centralwidget)
        self.recommendedSong_2.setStyleSheet(
            "background-color:#65D36E;color:black")
        self.recommendedSong_3 = QtWidgets.QPushButton(self.centralwidget)
        self.recommendedSong_3.setStyleSheet(
            "background-color:#65D36E;color:black")
        self.recommendedSong_4 = QtWidgets.QPushButton(self.centralwidget)
        self.recommendedSong_4.setStyleSheet(
            "background-color:#65D36E;color:black")
        self.recommendedSong_5 = QtWidgets.QPushButton(self.centralwidget)
        self.recommendedSong_5.setStyleSheet(
            "background-color:#65D36E;color:black")
        self.recommendedSong_6 = QtWidgets.QPushButton(self.centralwidget)
        self.recommendedSong_6.setStyleSheet(
            "background-color:#65D36E;color:black")
        self.recommendedSong_7 = QtWidgets.QPushButton(self.centralwidget)
        self.recommendedSong_7.setStyleSheet(
            "background-color:#65D36E;color:black")
        self.recommendedSong_8 = QtWidgets.QPushButton(self.centralwidget)
        self.recommendedSong_8.setStyleSheet(
            "background-color:#65D36E;color:black")

        # This is the list for all Button
        allButtonFirstRow = [
            self.recommendedSong_1, self.recommendedSong_2, self.recommendedSong_3, self.recommendedSong_4]
        allButtonSecondRow = [
            self.recommendedSong_5, self.recommendedSong_6, self.recommendedSong_7, self.recommendedSong_8]

        geoRowFirst = 30
        firstRowCounter = 0
        geoRowSecond = 30
        secondRowCounter = 4

        # print('self nya: ' + self.username)
        self.recommender.buildRatingMatrix()

        # print('hasilnya dibawah:')
        print(self.hasil_rekomendasi)

        for x in range(len(self.hasil_rekomendasi)):

            allButtonFirstRow[x].setGeometry(
                QtCore.QRect(geoRowFirst, 290, 111, 101))
            geoRowFirst += 120
            allButtonFirstRow[x].setText(
                str(self.hasil_rekomendasi[firstRowCounter][0]))
            allButtonFirstRow[x].setObjectName(
                "recommendedSong_"+str(firstRowCounter))
            if (firstRowCounter >= len(allButtonFirstRow)):
                break
            if (firstRowCounter >= 3):
                break
            firstRowCounter += 1

        if (len(self.hasil_rekomendasi) > 4):
            for y in range(len(allButtonSecondRow)):
                if(len(self.hasil_rekomendasi) <= secondRowCounter):
                    break
                allButtonSecondRow[y].setGeometry(
                    QtCore.QRect(geoRowSecond, 400, 111, 101))
                geoRowSecond += 120
                allButtonSecondRow[y].setText(
                    str(self.hasil_rekomendasi[secondRowCounter][0]))
                allButtonSecondRow[y].setObjectName(
                    "recommendedSong_"+str(secondRowCounter))
                if (secondRowCounter > 8):
                    break

                secondRowCounter += 1

        print(self.recommender.userRatings)

        selectedSongs = []  # disini wadah untuk nyimpen songs yg udah ke select
        selectedSongs.append(self.message)
        if (len(selectedSongs) > 4):
            selectedSongs.pop(-1)

        rates = self.songRating

        listSelectedSongs = {}

        def getSelectedSong(rating):
            for x in selectedSongs:
                name = str(x)
                rate = int(rating)
                tempArr = []
                tempArr.append(name)
                tempArr.append(rate)
                listSelectedSongs[x] = tempArr
            return listSelectedSongs
        print(getSelectedSong(rates))
        test = getSelectedSong(rates)
        print(test[selectedSongs[0]][1])
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("filledStar.png"),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)

        def loopFirstStars(rates):
            counterStars = 1
            rowStarsHis = 28
            dataSelectedSongs = getSelectedSong(rates)

            for x in range(dataSelectedSongs[selectedSongs[0]][1]):
                hisStarsFirst[x].setGeometry(
                    QtCore.QRect(rowStarsHis, 210, 31, 16))
                rowStarsHis += 20
                hisStarsFirst[x].setStyleSheet(
                    "image: url(filledStar.png);\n"
                    "background-color:transparent;")
                hisStarsFirst[x].setText("")
                hisStarsFirst[x].setIcon(icon)
                hisStarsFirst[x].setObjectName("star" + str(counterStars))
                # allButtonFirstRow[x].setObjectName(
                #     "recommendedSong_" + str(firstRowCounter))
                counterStars = counterStars + 1

            self.history_btn1.setGeometry(QtCore.QRect(30, 100, 111, 101))
            self.history_btn1.setText(dataSelectedSongs[selectedSongs[0]][0])
            self.history_btn1.setObjectName("history_btn1")

        def loopSecStars(rates):
            counterStarsSec = 6
            rowStarsHisSec = 150
            dataSelectedSongs = getSelectedSong(rates)
            for x in range(dataSelectedSongs[selectedSongs[0]][1]):
                hisStarsSecond[x].setGeometry(
                    QtCore.QRect(rowStarsHisSec, 210, 31, 16))
                rowStarsHisSec += 20
                hisStarsSecond[x].setStyleSheet(
                    "image: url(filledStar.png);\n"
                    "background-color:transparent;")
                hisStarsSecond[x].setText("")
                hisStarsSecond[x].setIcon(icon)
                hisStarsSecond[x].setObjectName("star" + str(counterStarsSec))
                # allButtonFirstRow[x].setObjectName(
                #     "recommendedSong_" + str(firstRowCounter))
                counterStarsSec = counterStarsSec + 1
            self.history_btn2.setGeometry(QtCore.QRect(150, 100, 111, 101))
            self.history_btn2.setText(dataSelectedSongs[selectedSongs[1]][0])
            self.history_btn2.setObjectName("history_btn2")

        def loopThirdStars(rates):
            counterStarsThird = 6
            rowStarsHisThird = 270
            dataSelectedSongs = getSelectedSong(rates)
            for x in range(dataSelectedSongs[selectedSongs[0]][1]):
                hisStarsThird[x].setGeometry(
                    QtCore.QRect(rowStarsHisThird, 210, 31, 16))
                rowStarsHisThird += 20
                hisStarsThird[x].setStyleSheet(
                    "image: url(filledStar.png);\n"
                    "background-color:transparent;")
                hisStarsThird[x].setText("")
                hisStarsThird[x].setIcon(icon)
                hisStarsThird[x].setObjectName("star" + str(counterStarsThird))
                # allButtonFirstRow[x].setObjectName(
                #     "recommendedSong_" + str(firstRowCounter))
                counterStarsThird = counterStarsThird + 1
            self.history_btn3.setGeometry(QtCore.QRect(270, 100, 111, 101))
            self.history_btn3.setText(dataSelectedSongs[selectedSongs[2]][0])
            self.history_btn3.setObjectName("history_btn3")

        def loopFourthStars(rates):
            counterStarsFourth = 11
            rowStarsHisFourth = 390
            dataSelectedSongs = getSelectedSong(rates)
            for x in range(dataSelectedSongs[selectedSongs[0]][1]):
                hisStarsFourth[x].setGeometry(
                    QtCore.QRect(rowStarsHisFourth, 210, 31, 16))
                rowStarsHisFourth += 20
                hisStarsFourth[x].setStyleSheet(
                    " image: url(filledStar.png);\n"
                    "background-color:transparent;")
                hisStarsFourth[x].setText("")
                hisStarsFourth[x].setIcon(icon)
                hisStarsFourth[x].setObjectName(
                    "star" + str(counterStarsFourth))
                # allButtonFirstRow[x].setObjectName(
                #     "recommendedSong_" + str(firstRowCounter))
                counterStarsFourth = counterStarsFourth + 1

            self.history_btn4.setGeometry(QtCore.QRect(390, 100, 111, 101))
            self.history_btn4.setText(dataSelectedSongs[selectedSongs[3]][0])
            self.history_btn4.setObjectName("history_btn4")
        if (len(selectedSongs) == 1):

            loopFirstStars(rates)

        elif (len(selectedSongs) == 2):
            loopFirstStars(rates)
            loopSecStars(rates)
        elif (len(selectedSongs) == 3):
            loopFirstStars(rates)
            loopSecStars(rates)
            loopThirdStars(rates)
        elif (len(selectedSongs) == 4):
            loopFirstStars(rates)
            loopSecStars(rates)
            loopThirdStars(rates)
            loopFourthStars(rates)

        self.lineEdit_songSearch.setObjectName("lineEdit_songSearch")
        self.search_btn = QtWidgets.QPushButton(self.centralwidget)
        self.lineEdit_songSearch.editingFinished.connect(self.update_display)
        self.completer = QCompleter(df.Title)
        self.completer.setCaseSensitivity(Qt.CaseInsensitive)
        self.lineEdit_songSearch.setCompleter(self.completer)

        self.search_btn.setGeometry(QtCore.QRect(310, 10, 93, 41))
        self.search_btn.setStyleSheet("border:1px solid white;\n"
                                      "border-radius:10px;\n"
                                      "color: white;")
        self.search_btn.setObjectName("search_btn")
        self.search_btn.clicked.connect(self.searchSongs)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(-10, -10, 831, 71))
        self.label.setStyleSheet("background-color: #000000;\n"
                                 "border-color:white")
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(-20, -60, 831, 651))
        font = QtGui.QFont()
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.label_11.setFont(font)
        self.label_11.setText("")
        self.label_11.setPixmap(QtGui.QPixmap("ai-background.png"))
        self.label_11.setScaledContents(True)
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setObjectName("label_11")
        self.label_11.raise_()
        self.label.raise_()
        self.username_label.raise_()
        self.logout_btn.raise_()
        self.label_2.raise_()
        self.label_4.raise_()
        # self.history_btn.raise_()
        self.history_btn1.raise_()
        self.history_btn2.raise_()
        self.history_btn3.raise_()
        self.history_btn4.raise_()
        self.recommendedSong_1.raise_()
        self.recommendedSong_2.raise_()
        self.recommendedSong_3.raise_()
        self.recommendedSong_4.raise_()
        self.recommendedSong_5.raise_()
        self.recommendedSong_8.raise_()
        self.recommendedSong_6.raise_()
        self.recommendedSong_7.raise_()
        self.star1.raise_()
        self.star2.raise_()
        self.star3.raise_()
        self.star4.raise_()
        self.star5.raise_()
        self.lineEdit_songSearch.raise_()
        self.search_btn.raise_()
        homePageHisWindow.setCentralWidget(self.centralwidget)
        self.logout_btn.clicked.connect(self.logoutAndSave)
        self.retranslateUi(homePageHisWindow)
        QtCore.QMetaObject.connectSlotsByName(homePageHisWindow)

    def logoutAndSave(self):
        self.recommender.saveData()
        print('data saved')
        from login import Ui_MainWindow
        self.MainWindow = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow()
        self.homepage.hide()
        self.ui.setupUi(self.MainWindow)
        self.MainWindow.show()

    def retranslateUi(self, homePageHisWindow):
        _translate = QtCore.QCoreApplication.translate
        homePageHisWindow.setWindowTitle(
            _translate("homePageHisWindow", "MainWindow"))
        self.username_label.setText(_translate(
            "homePageHisWindow", self.username))
        self.logout_btn.setText(_translate("homePageHisWindow", "LOGOUT"))
        self.label_2.setText(_translate("homePageHisWindow", "History"))
        self.label_4.setText(_translate("homePageHisWindow", "Made For You"))
        self.search_btn.setText(_translate("homePageHisWindow", "SEARCH"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    homePageHisWindow = QtWidgets.QMainWindow()
    ui = Ui_homePageHisWindow()
    ui.setupUi(homePageHisWindow)
    homePageHisWindow.show()
    sys.exit(app.exec_())
